{"name":"DBreeze - NOSQL ACID embedded database management system for .NET 3.0> and MONO","tagline":"C# .NET MONO NOSQL ACID embedded database management system.","body":"![DBreeze](https://download-codeplex.sec.s-msft.com/Download?ProjectName=dbreeze&DownloadId=375768&Build=20686) **DBreeze - C# .NET ACID NOSQL embedded database management system**\r\n\r\nProfessional, open-source, NoSql (embedded Key/Value storage), transactional, ACID-compliant, multi-threaded, object database management system for\r\nC# .NET 3.0> MONO.\r\n\r\n- It's a free software for those, who thinks that it should be free.\r\n\r\n- Since June 2012 is used in our own production environment.\r\n\r\n- Follow the project, to be in touch with the recent optimizations and enhancements.\r\n\r\n- Read \"Changes in versions\" document.\r\n\r\nIts homepage is http://dbreeze.tiesky.com or http://dbreeze.codeplex.com\r\n\r\n- [Documentation (HTML, actual)](https://docs.google.com/document/pub?id=1IFkXoX3Tc2zHNAQN9EmGSXZGbQabMrWmpmVxFsLxLsw) \r\n- [Benchmark (HTML, actual)](https://docs.google.com/document/pub?id=1VoBpzOENb24vF3ZQ10sxa0j-PAprKBGJ6uiGpEisxdM)\r\n- [Changes in versions](https://docs.google.com/document/pub?id=1r1l940w4Z5p_6ntEkMTkjCWwbOQtJNr40Pq8wqI6g4o)\r\n- [Discussion on the forum](https://dbreeze.codeplex.com/discussions)\r\n\r\nKey features:\r\n\r\n- Fully managed code, platform independent and without reference to other libraries.\r\n- ACID compliant.\r\n- Multi-threaded, with a solution for deadlocks resolving/elimination, parallel reads and synchronized writes/reads.\r\n- No fixed scheme for table names (construction and access on the fly).\r\n- Tables can reside in mixed locations: different folders, hard drives, memory.\r\n- Database indexes (keys) never need to be defragmented. Speed of insert/update/remove operations doesn't grow up during the time.\r\n- Ability to access Key/Value pair of a table by physical link, what can economize time for joining necessary data structures.\r\n- No limits for database size (except \"long\" size for each table and physical resources constraints).\r\n- Low physical space consumption, also while random inserts and updates. Updates reside the same physical space, if possible.\r\n- High performance of CRUD operations. When you need, unleash DBreeze power and get 500000 key/value pairs insert or 260K updates per second per core into sorted table on the hard drive of standard PC.\r\n- High speed of random keys batch insert and updates (batch must be sorted in memory ascending and non-overwrite flag must be set).\r\n- Range selects / Traversing (Forward, Backward, From/To, Skip, StartsWith etc). Remove keys, change keys.\r\n- Keys and values, on the low level, are always byte arrays.\r\n- Max. key size is 65KB, max. value size is 2GB. Value can be represented as a set of columns, where can be stored data types of fixed or dynamic length. Every dynamic datablock can be of size 2GB.\r\n- Rich set of conversion functions from/to between byte[] and other data types.\r\n- Nested / Fractal tables which can reside inside of master tables values.\r\n- Incremental backup/restore option.\r\n- DBreeze is a foundation for complex data storage solutions (graph/neuro, object, document, text search etc. data layers). Please, study documentation to understand all abilities of DBreeze.\r\n\r\nhhblaze@gmail.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}